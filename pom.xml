<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>service-docker-mixin</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <service.org>sample</service.org>
        <service.prefix>${service.org}</service.prefix>
        <service.name>${project.artifactId}</service.name>
        <APP_HOME>${APP_HOME}</APP_HOME>
        <docker.configuration.files.folder>${project.build.directory}/docker-config</docker.configuration.files.folder>
        <docker.assembly.xml.file.name>docker-assembly.xml</docker.assembly.xml.file.name>
        <docker.assembly.xml.file.path>${docker.configuration.files.folder}/${docker.assembly.xml.file.name}
        </docker.assembly.xml.file.path>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.33.0</version>
                    <extensions>true</extensions>
                    <configuration>
                        <images>
                            <image>
                                <name>${service.prefix}%a</name>
                                <run>
                                    <privileged>true</privileged>
                                    <env>
                                        <LANG>C.UTF-8</LANG>
                                        <APP_HOME>/usr/local/${service.org}/${service.name}</APP_HOME>
                                    </env>
                                    <log>
                                        <enabled>true</enabled>
                                        <prefix>&nbsp;</prefix>
                                        <color>cyan</color>
                                        <file>${test.docker.container.log.directory}/${service.name}</file>
                                    </log>
                                </run>
                            </image>
                        </images>
                        <removeVolumes>true</removeVolumes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>generate-docker-configuration-tar-gz</id>
            <activation>
                <file>
                    <exists>../service-docker-mixin</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <configuration>
                            <descriptors>
                                <appendAssemblyId>true</appendAssemblyId>
                                <tarLongFileMode>posix</tarLongFileMode>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-docker-configuration-tar-gz</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.2.0</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <classpathLayoutType>custom</classpathLayoutType>
                                    <customClasspathLayout>
                                        $${artifact.groupId}.$${artifact.artifactid}.$${artifact.extension}
                                    </customClasspathLayout>
                                    <mainClass>${main-Class}</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.2</version>
                        <executions>
                            <execution>
                                <id>unpack-docker-configuration-files</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifact>
                                        ${project.groupId}:service-docker-mixin:${project.version}:tar.gz:docker-config
                                    </artifact>
                                    <outputDirectory>${docker.configuration.files.folder}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>1.9.0</version>
                        <executions>
                            <execution>
                                <id>override-docker-configuration</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <scripts>
                                        <![CDATA[
                                            import java.nio.file.Path
                                            import java.nio.file.Paths
                                            import org.apache.commons.io.FileUtils

                                            final Path sourceConfigFolder = Paths.get(project.basedir.toString(), "docker")
                                            final Path targetConfigFolder = Paths.get(project.properties["docker.configuration.files.folder"])

                                            if(sourceConfigFolder.toFile().exists()) {
                                                println sprintf("Copying docker configuration from folder [%s] to [%s]", sourceConfigFolder.toAbsolutePath(), targetConfigFolder.toAbsolutePath())
                                                FileUtils.copyDirectory(sourceConfigFolder.toFile(), targetConfigFolder.toFile())
                                            }
                                        ]]>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Create docker image -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.33.0</version>
                        <configuration>
                            <sourceDirectory>.</sourceDirectory>
                            <images>
                                <image>
                                    <name>${service.prefix}%a</name>
                                    <run>
                                        <privileged>true</privileged>
                                        <env>
                                            <LANG>C.UTF-8</LANG>
                                        </env>
                                        <tags>
                                            <tag>${project.version}</tag>
                                        </tags>
                                        <dockerFileDir>${docker.configuration.files.folder}</dockerFileDir>
                                        <assembly>
                                            <mode>dir</mode>
                                            <basedir>/usr/local/${service.org}/${project.artifactId}</basedir>
                                            <descriptors>${docker.assembly.xml.file.path}</descriptors>
                                        </assembly>
                                        <args>
                                            <SERVICE_PATH>/usr/local/${service.org}/${project.artifactId}</SERVICE_PATH>
                                            <SERVICE_JAR>${project.artifactId}-${project.version}</SERVICE_JAR>
                                            <SERVICE_NAME>${project.artifactId}</SERVICE_NAME>
                                        </args>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker:build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>